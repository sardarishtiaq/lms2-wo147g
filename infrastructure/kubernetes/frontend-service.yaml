# Frontend Service Configuration for CRM System
# Version: v1
# Purpose: Expose frontend application internally and to ingress controller
apiVersion: v1
kind: Service

metadata:
  name: frontend
  namespace: default
  labels:
    app: crm
    component: frontend
    tier: frontend
    environment: ${ENV}
    managed-by: kubernetes
  annotations:
    # Prometheus monitoring configuration
    prometheus.io/scrape: "true"
    prometheus.io/port: "80"
    prometheus.io/path: "/metrics"
    
    # AWS Load Balancer configurations
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-internal: "true"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    
    # Additional monitoring annotations
    monitoring.interval: "30s"
    monitoring.timeout: "10s"
    monitoring.health-check-path: "/health"
    monitoring.availability-target: "99.9"
    monitoring.latency-threshold: "200ms"
    monitoring.error-rate-threshold: "0.01"

spec:
  type: ClusterIP
  ports:
    # Main application port
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
    
    # Metrics port for Prometheus
    - port: 9113
      targetPort: 9113
      protocol: TCP
      name: metrics
  
  # Selector matching frontend deployment pods
  selector:
    app: crm
    component: frontend
  
  # Session configuration
  sessionAffinity: None
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800
  
  # Traffic policy configuration
  publishNotReadyAddresses: false
  internalTrafficPolicy: Cluster

---
# Network Policy for Frontend Service
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: frontend-network-policy
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: crm
      component: frontend
  
  policyTypes:
    - Ingress
    - Egress
  
  ingress:
    # Allow ingress from ingress controller
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: kube-system
          podSelector:
            matchLabels:
              app: nginx-ingress
      ports:
        - protocol: TCP
          port: 80
    
    # Allow ingress from Prometheus
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: monitoring
          podSelector:
            matchLabels:
              app: prometheus
      ports:
        - protocol: TCP
          port: 9113
  
  egress:
    # Allow egress to backend service
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: default
          podSelector:
            matchLabels:
              app: crm
              component: backend
      ports:
        - protocol: TCP
          port: 8080