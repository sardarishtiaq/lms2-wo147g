# Frontend application secrets with encryption at rest and access controls
# Version: v1
# Dependencies:
# - kubernetes/core v1
# - ../configmaps/frontend-config.yaml
# - ../frontend-deployment.yaml

apiVersion: v1
kind: Secret
metadata:
  name: frontend-secrets
  namespace: default
  labels:
    app: crm
    component: frontend
  annotations:
    # Enable encryption at rest for additional security
    kubernetes.io/encrypt-at-rest: "true"
    # Enable automatic secret rotation every 30 days
    secret.kubernetes.io/auto-rotation: "enabled"
    # Enable monitoring and alerting on secret access
    monitoring.kubernetes.io/alert-on-access: "true"
    # Additional metadata for secret management
    secret.kubernetes.io/rotation-interval: "30d"
    secret.kubernetes.io/audit-logging: "enabled"
    secret.kubernetes.io/audit-retention: "90d"
    backup.kubernetes.io/enabled: "true"
    backup.kubernetes.io/schedule: "daily"
    backup.kubernetes.io/retention: "30d"

type: Opaque

# Base64 encoded sensitive configuration values
# Note: Values are templated and should be replaced during deployment
data:
  # Required: Sentry error tracking DSN URL
  # Format: https://<key>@<host>.ingest.sentry.io/<project>
  sentry_dsn: ${SENTRY_DSN}

  # Optional: Mixpanel analytics token
  # Format: 32 character hexadecimal
  mixpanel_token: ${MIXPANEL_TOKEN}

  # Required: Auth0 authentication credentials
  # Format: 32 character client ID and tenant domain
  auth0_client_id: ${AUTH0_CLIENT_ID}
  auth0_domain: ${AUTH0_DOMAIN}

  # Optional: Stripe publishable key for payments
  # Format: pk_(test|live)_<key>
  stripe_public_key: ${STRIPE_PUBLIC_KEY}

# RBAC configuration for secret access
# Roles that can access this secret:
# - system:serviceaccounts
# - frontend-deployer
# - secret-manager
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: frontend-secrets-reader
  namespace: default
rules:
- apiGroups: [""]
  resources: ["secrets"]
  resourceNames: ["frontend-secrets"]
  verbs: ["get"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: frontend-secrets-reader-binding
  namespace: default
subjects:
- kind: ServiceAccount
  name: frontend-deployer
  namespace: default
- kind: ServiceAccount
  name: secret-manager
  namespace: default
roleRef:
  kind: Role
  name: frontend-secrets-reader
  apiGroup: rbac.authorization.k8s.io